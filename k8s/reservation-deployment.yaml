apiVersion: apps/v1
kind: Deployment
metadata:
  name: reservation-server
  namespace: default
  labels:
    app: reservation-server
spec:
  replicas: 1
  revisionHistoryLimit: 2 # how many old ReplicaSets for this Deployment you want to retain, https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy
  selector:
    matchLabels:
      app: reservation-server
  minReadySeconds: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: reservation-server
    spec:
      containers:        
        - name: reservation-server
          image: openreservation/reservation-server:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 30m
              memory: 32Mi
            limits:
              cpu: 80m
              memory: 256Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 30
          ports:
            - containerPort: 80
          env:
          - name: DOTNET_DiagnosticPorts
            value: /diag/port
          volumeMounts:
          - name: settings
            mountPath: /app/appsettings.Production.json
            subPath: appsettings
          - mountPath: /diag
            name: diagvol
          - mountPath: /dumps
            name: dumpsvol
          - mountPath: /tmp
            name: tmpvol
        - name: dotnet-monitor
          image: mcr.microsoft.com/dotnet/monitor:7
          args: [ "collect", "--urls", "http://+:52323", "--no-auth" ]
          imagePullPolicy: Always
          ports:
            - containerPort: 52323
          env:
          - name: DOTNETMONITOR_DiagnosticPort__ConnectionMode
            value: Listen
          - name: DOTNETMONITOR_DiagnosticPort__EndpointName
            value: /diag/port
          - name: DOTNETMONITOR_Storage__DumpTempFolder
            value: /dumps
          - name: XDG_CONFIG_HOME
            value: "/etc"
          volumeMounts:
          - mountPath: /diag
            name: diagvol
          - mountPath: /dumps
            name: dumpsvol
          - mountPath: /tmp
            name: tmpvol
          - name: monitor-configs
            mountPath: /etc/dotnet-monitor/settings.json
            subPath: default
          resources:
            requests:
              cpu: 30m
              memory: 32Mi
            limits:
              cpu: 50m
              memory: 256Mi
      volumes:
        - name: settings
          configMap:
            name: reservation-configs
        - name: monitor-configs
          configMap:
            name: dotnet-monitor-configs
        - name: diagvol
          emptyDir: {}
        - name: dumpsvol
          emptyDir: {}
        - name: tmpvol
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: reservation-server
spec:
  selector:
    app: reservation-server
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: dotnet-monitor
    port: 52323
    protocol: TCP
    targetPort: 52323
---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: reservation-server-monitor
#   labels:
#     release: kube-prometheus-stack
# spec:
#   selector:
#     matchLabels:
#       app: reservation-server
#   namespaceSelector:
#     matchNames:
#     - default
#   endpoints:
#   - port: http
#     interval: 10s
#     path: /metrics
#   - port: dotnet-monitor
#     interval: 10s
#     path: /metrics
